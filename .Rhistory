legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
View(electric)
sapply(electric, class)
ggplot(electric, aes(x = Fra)) +
geom_line(aes(y = Oslo_price, color = "Oslo")) +
geom_line(aes(y = Trondheim_price, color = "Trondheim")) +
geom_line(aes(y = Bergen_price, color = "Bergen")) +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype = "dashed", color = "black") +
labs(x = "", y = "Electricity price", color = "City") +
scale_color_manual(values = c("blue", "green", "red")) +
theme(legend.position = "top",
legend.title = element_text(size = 18), # modify the legend.title component
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
ggplot(electric, aes(x = Fra)) +
geom_line(aes(y = `Sørøst-Norge - Oslo (NO1)`, color = "Oslo")) +
geom_line(aes(y = `Midt-Norge - Trondheim (NO3)`, color = "Trondheim")) +
geom_line(aes(y = `Vest-Norge - Bergen (NO5)`, color = "Bergen")) +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype = "dashed", color = "black") +
labs(x = "", y = "Electricity price", color = "City") +
scale_color_manual(values = c("blue", "green", "red")) +
theme(legend.position = "top",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
bergen_complete$city <- "bergen"
oslo_complete$city <- "oslo"
trondheim_complete$city <- "trondheim"
View(bergen_complete)
all_cities <- bind_rows(bergen_complete, oslo_complete, trondheim_complete) %>%
select(Fra, Navn, Private, NonPrivate, e_crisis, e_treat,
time_to_crisis, numroad, Dev_Price, city)
setDT(all_cities)
# Arrange data frame by the Fra column
all_cities <- all_cities %>% arrange(Fra)
ggplot(all_cities, aes(x = Fra, y = Dev_Price, color = city)) +
geom_line() +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype="dashed") +
labs(x = "", y = "Deviation above pre-January 2021 Mean") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_text(size = 18), # modify the legend.title component
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
#jpeg("electricity.jpg", width = 800, height = 600)
ggplot(electric, aes(x = Fra)) +
geom_line(aes(y = `Sørøst-Norge - Oslo (NO1)`, color = "Oslo")) +
geom_line(aes(y = `Midt-Norge - Trondheim (NO3)`, color = "Trondheim")) +
geom_line(aes(y = `Vest-Norge - Bergen (NO5)`, color = "Bergen")) +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype = "dashed", color = "black") +
labs(x = "", y = "Electricity price", color = "City") +
scale_color_manual(values = c("blue", "green", "red")) +
theme(legend.position = "top",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
bergen_complete$city <- "bergen"
oslo_complete$city <- "oslo"
trondheim_complete$city <- "trondheim"
all_cities <- bind_rows(bergen_complete, oslo_complete, trondheim_complete) %>%
select(Fra, Navn, Private, NonPrivate, e_crisis, e_treat,
time_to_crisis, numroad, Dev_Price, city)
setDT(all_cities)
# Arrange data frame by the Fra column
all_cities <- all_cities %>% arrange(Fra)
ggplot(all_cities, aes(x = Fra, y = Dev_Price, color = city)) +
geom_line() +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype="dashed") +
labs(x = "", y = "Deviation above pre-January 2021 Mean") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_text(size = 18), # modify the legend.title component
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
ggplot(electric, aes(x = Fra)) +
geom_line(aes(y = `Sørøst-Norge - Oslo (NO1)`, color = "oslo")) +
geom_line(aes(y = `Midt-Norge - Trondheim (NO3)`, color = "trondheim")) +
geom_line(aes(y = `Vest-Norge - Bergen (NO5)`, color = "bergen")) +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype = "dashed", color = "black") +
labs(x = "", y = "Electricity price", color = "City") +
scale_color_manual(values = city_colors) +  # Use the common color scale
theme(legend.position = "top",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
city_colors <- c("bergen" = "blue", "oslo" = "green", "trondheim" = "red")
city_labels <- c("bergen" = "Bergen", "oslo" = "Oslo", "trondheim" = "Trondheim")
ggplot(electric, aes(x = Fra)) +
geom_line(aes(y = `Sørøst-Norge - Oslo (NO1)`, color = "oslo")) +
geom_line(aes(y = `Midt-Norge - Trondheim (NO3)`, color = "trondheim")) +
geom_line(aes(y = `Vest-Norge - Bergen (NO5)`, color = "bergen")) +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype = "dashed", color = "black") +
labs(x = "", y = "Electricity price", color = "City") +
scale_color_manual(values = city_colors) +  # Use the common color scale
theme(legend.position = "top",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
# Plot deviation of electricity prices for the three cities
ggplot(all_cities, aes(x = Fra, y = Dev_Price, color = city)) +
geom_line() +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype="dashed") +
labs(x = "", y = "Deviation above pre-January 2021 Mean") +
scale_color_manual(values = city_colors) +  # Use the common color scale
scale_fill_manual(values = city_colors) +   # Add scale_fill for consistency
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
ggplot(all_cities, aes(x = Fra, y = Dev_Price, color = city)) +
geom_line() +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype="dashed") +
labs(x = "", y = "Deviation above pre-January 2021 Mean") +
scale_color_manual(values = city_colors) +  # Use the common color scale
scale_fill_manual(values = city_colors) +   # Add scale_fill for consistency
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
# Plot deviation of electricity prices for the three cities
ggplot(all_cities, aes(x = Fra, y = Dev_Price, color = city)) +
geom_line() +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype="dashed") +
labs(x = "", y = "Deviation above pre-January 2021 Mean") +
scale_color_manual(values = city_colors) +  # Use the common color scale
scale_fill_manual(values = city_colors) +   # Add scale_fill for consistency
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 16),  # Remove one of the "axis.title" lines
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16))
ggplot(electric, aes(x = Fra)) +
geom_line(aes(y = `Sørøst-Norge - Oslo (NO1)`, color = "oslo")) +
geom_line(aes(y = `Midt-Norge - Trondheim (NO3)`, color = "trondheim")) +
geom_line(aes(y = `Vest-Norge - Bergen (NO5)`, color = "bergen")) +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype = "dashed", color = "black") +
labs(x = "", y = "Electricity price", color = "City") +
scale_color_manual(values = city_colors) +  # Use the common color scale
theme(legend.position = "top",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
# Plot deviation of electricity prices for the three cities
ggplot(all_cities, aes(x = Fra, y = Dev_Price, color = city)) +
geom_line() +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype="dashed") +
labs(x = "", y = "Deviation above pre-January 2021 Mean") +
scale_color_manual(values = city_colors) +  # Use the common color scale
scale_fill_manual(values = city_colors) +   # Add scale_fill for consistency
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 16),  # Remove one of the "axis.title" lines
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16))
# Define common colors and labels
city_colors <- c("bergen" = "blue", "oslo" = "green", "trondheim" = "red")
city_labels <- c("bergen" = "Bergen", "oslo" = "Oslo", "trondheim" = "Trondheim")
ggplot(electric, aes(x = Fra)) +
geom_line(aes(y = `Sørøst-Norge - Oslo (NO1)`, color = "oslo")) +
geom_line(aes(y = `Midt-Norge - Trondheim (NO3)`, color = "trondheim")) +
geom_line(aes(y = `Vest-Norge - Bergen (NO5)`, color = "bergen")) +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype = "dashed", color = "black") +
labs(x = "", y = "Electricity price", color = "City") +
scale_color_manual(values = city_colors) +  # Use the common color scale
theme(legend.position = "top",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
bergen_complete$city <- "bergen"
oslo_complete$city <- "oslo"
trondheim_complete$city <- "trondheim"
all_cities <- bind_rows(bergen_complete, oslo_complete, trondheim_complete) %>%
select(Fra, Navn, Private, NonPrivate, e_crisis, e_treat,
time_to_crisis, numroad, Dev_Price, city)
setDT(all_cities)
# Arrange data frame by the Fra column
all_cities <- all_cities %>% arrange(Fra)
# Plot deviation of electricity prices for the three cities
ggplot(all_cities, aes(x = Fra, y = Dev_Price, color = city)) +
geom_line() +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype="dashed") +
labs(x = "", y = "Deviation above pre-January 2021 Mean") +
scale_color_manual(values = city_colors) +  # Use the common color scale
scale_fill_manual(values = city_colors) +   # Add scale_fill for consistency
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 16),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16))
city_colors <- c("bergen" = "blue", "oslo" = "green", "trondheim" = "red")
city_labels <- c("bergen" = "Bergen", "oslo" = "Oslo", "trondheim" = "Trondheim")
ggplot(electric, aes(x = Fra)) +
geom_line(aes(y = `Sørøst-Norge - Oslo (NO1)`, color = "oslo")) +
geom_line(aes(y = `Midt-Norge - Trondheim (NO3)`, color = "trondheim")) +
geom_line(aes(y = `Vest-Norge - Bergen (NO5)`, color = "bergen")) +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype = "dashed", color = "black") +
labs(x = "", y = "Electricity price", color = "City") +
scale_color_manual(values = city_colors) +  # Use the common color scale
theme(legend.position = "top",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold")) +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 16))
bergen_complete$city <- "bergen"
oslo_complete$city <- "oslo"
trondheim_complete$city <- "trondheim"
all_cities <- bind_rows(bergen_complete, oslo_complete, trondheim_complete) %>%
select(Fra, Navn, Private, NonPrivate, e_crisis, e_treat,
time_to_crisis, numroad, Dev_Price, city)
setDT(all_cities)
# Arrange data frame by the Fra column
all_cities <- all_cities %>% arrange(Fra)
# Plot deviation of electricity prices for the three cities
ggplot(all_cities, aes(x = Fra, y = Dev_Price, color = city)) +
geom_line() +
geom_vline(xintercept = as.numeric(as.Date("2021-01-01")), linetype="dashed") +
labs(x = "", y = "Deviation above pre-January 2021 Mean") +
scale_color_manual(values = city_colors) +  # Use the common color scale
scale_fill_manual(values = city_colors) +   # Add scale_fill for consistency
theme_bw() +
theme(legend.position = "top",  # Move the legend to the top
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 16),
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16))
al_cities
bergen_complete$city <- "bergen"
oslo_complete$city <- "oslo"
trondheim_complete$city <- "trondheim"
all_cities <- bind_rows(bergen_complete, oslo_complete, trondheim_complete) %>%
select(Fra, Navn, Private, NonPrivate, e_crisis, e_treat,
time_to_crisis, numroad, Dev_Price, city)
setDT(all_cities)
# Arrange data frame by the Fra column
all_cities <- all_cities %>% arrange(Fra)
al_cities
all_cities
#bergen
model_bergen <- feols((Private) ~ Bergen_price + e_crisis +NonPrivate+ factor(numroad) + i(time_to_crisis,e_treat, ref = -1) +  e_crisis * time_to_crisis, cluster = ~numroad, data = bergen_complete[time_to_crisis %in% c(-40:27)])
all_cities_subset <- subset(all_cities, time_to_crisis %in% c(-40:27))
model_fe<-feols(Private ~ Dev_Price * time_to_crisis+i(time_to_crisis, ref = -1)
| numroad + city,
data = all_cities_subset)
model_fe %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to crisis",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage across cities"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
model_bergen <- feols((Private) ~ Bergen_price + e_crisis + factor(numroad) + i(time_to_crisis,e_treat, ref = -1) +  e_crisis * time_to_crisis, cluster = ~numroad, data = bergen_complete[time_to_crisis %in% c(-40:27)])
model_bergen %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to event",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage in Bergen"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
oslo_complete$Private<-as.integer(oslo_complete$Private)
trondheim_complete$Private<-as.integer(trondheim_complete$Private)
#bergen
oslo_complete$Private<-as.integer(oslo_complete$Private)
trondheim_complete$Private<-as.integer(trondheim_complete$Private)
#bergen
model_bergen <- feols((Private) ~ Bergen_price + e_crisis + factor(numroad) + i(time_to_crisis, ref = -1) +  e_crisis * time_to_crisis, cluster = ~numroad, data = bergen_complete[time_to_crisis %in% c(-40:27)])
model_bergen %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to event",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage in Bergen"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
#oslo
model_oslo <- feols((Private) ~ Oslo_price + e_crisis + factor(numroad) + i(time_to_crisis, ref = -1) +  e_crisis * time_to_crisis, cluster = ~numroad, data = oslo_complete[time_to_crisis %in% c(-40:27)])
model_oslo %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to event",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage in Oslo"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
#trondheim
model_trondheim <- feols((Private) ~ Trondheim_price + e_crisis + factor(numroad) + i(time_to_crisis, ref = -1) +  e_crisis * time_to_crisis, cluster = ~numroad, data = trondheim_complete[time_to_crisis %in% c(-40:27)])
model_trondheim %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to event",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage in Trondheim"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
View(all_cities)
all_cities_subset <- subset(all_cities, time_to_crisis %in% c(-40:27))
model_fe<-feols(Private ~Dev_Price+ Dev_Price * time_to_crisis+i(time_to_crisis, ref = -1)
| numroad + city,
data = all_cities_subset)
summary(model_fe)
fe<-feols(Private ~ Dev_Price * time_to_crisis | numroad + city,
data = all_cities)
model_fe %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to crisis",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage across cities"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
all_cities_subset <- subset(all_cities, time_to_crisis %in% c(-40:27))
model_fe<-feols(Private ~ Dev_Price * time_to_crisis+i(time_to_crisis, ref = -1)
| numroad + city,
data = all_cities_subset)
summary(model_fe)
fe<-feols(Private ~ Dev_Price * time_to_crisis | numroad + city,
data = all_cities)
model_fe %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to crisis",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage across cities"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
residuals <- resid(model_fe)
fitted_values <- predict(model_fe)
all_cities_subset <- subset(all_cities, time_to_crisis %in% c(-40:27))
model_fe<-feols(Private ~ Dev_Price * time_to_crisis+i(time_to_crisis, ref = -1)
| numroad + city,
data = all_cities_subset)
summary(model_fe)
model_fe %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to crisis",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage across cities"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
residuals <- resid(model_fe)
fitted_values <- predict(model_fe)
plot(fitted_values, residuals, xlab = "Fitted values", ylab = "Residuals", main = "Residuals vs. Fitted Values Plot (Bergen)")
abline(h = 0, lty = 2, col = "red")
residuals <- resid(model_fe)
fitted_values <- predict(model_fe)
plot(fitted_values, residuals, xlab = "Fitted values", ylab = "Residuals", main = "Residuals vs. Fitted Values Plot ")
abline(h = 0, lty = 2, col = "red")
residuals <- resid(model_fe)
fitted_values <- predict(model_fe)
hist(model_fe$residuals, freq = FALSE)
curve(dnorm(x, mean = mean(model_fe$residuals), sd = sd(model_fe$residuals)), add = TRUE, col = "red")
library(car)
vif(model_fe)
# Calculate correlation matrix
cor_mat <- cor(bergen_long[, c("Bergen_price", "e_crisis", "time_to_crisis")])
View(all_cities)
# Calculate correlation matrix
cor_mat <- cor(all_cities[, c("Dev_Price", "e_crisis", "time_to_crisis")])
# Print correlation matrix
print(cor_mat)
model_fe %>%
ggiplot(
ref.line = -1,
geom_style = "ribbon"
) +
labs(
x = "Time to crisis",
title = "Event study",
subtitle = "Effect of Surge in Electricity Prices on Private Car Usage across cities"
) +
theme_minimal()+
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
summary(model_fe)
bergen_complete
head(bergen_complete)
head(all_cities)
setwd("F:/ECO 433/Norway-Electricity-PrivateCar-Impact-Analysis")
